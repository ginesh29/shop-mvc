
@{
    Layout = null;
    List<SPA.Models.PaySection> PayDetails = Model;
    List<Language_NewShop> Languageinfo = new List<Language_NewShop>();
    Languageinfo = ViewBag.language;
    var Language = Languageinfo.Where(c => c.Page_Name == "PaymentGateway").ToList();
    int LanguageId = ViewBag.LangId;
    List<SPA.Models.LanguageLabelDetails> LangNameList = ViewBag.LangNameList;
    ViewBag.Title = Languageinfo.Where(c => c.Page_Name == "Registration_Page" && c.Order_id == 58).Select(c => c.Value).FirstOrDefault();
    //string Link = LanguageId > 0 ? "/Registration/TermsCondition?lang=" + LanguageId : "/Registration/TermsCondition";
}
@Styles.Render("~/Contents/css")
@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/clickscript")
@if (LanguageId > 1)
{
    @Html.Partial("_LangValidation", "/Scripts/messages_" + LangNameList.Where(c => c.Lang_id == LanguageId).Select(c => c.English_Label).FirstOrDefault().ToLower() + ".js");
}
@*@if (LanguageId == 2)
{
    <script type="text/javascript" src="~/Scripts/messages_de.js"></script>}
@if (LanguageId == 3)
{
    <script type="text/javascript" src="~/Scripts/messages_fr.js"></script>}*@

<body style="background:#fff;">
    <div class="container">
        <div class="bg-grey border-radius5">
            <div class="login-main">
                @Html.Partial("_Progressbar", Languageinfo.Where(c => c.Page_Name == "Registration_Page").ToList())
                <div class="padding0-30">
                    <a href="@(LanguageId>0?"/Registration/Various?lang="+LanguageId:"/Registration/Various")" class="back-btn"><i class="fa fa-reply-all"></i>@Html.Raw(Language.Where(c => c.Order_id == 9).Select(c => c.Value).FirstOrDefault())</a>@*back*@
                </div>
                <div class="clearfix"></div>
                <form id="PaymentForm" name="PaymentForm" action="/Registration/AddPaymentdata" enctype="multipart/form-data" method="post">
                    @if (PayDetails.Count > 0)
                    {
                        <input type="hidden" id="PayDetail" name="PayDetail" />
                        <input type="hidden" value="@PayDetails.Select(c => c.country_id).FirstOrDefault()" id="ShopId">
                        <div class="payment-gateway-table table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th class="width30per">@Html.Raw(Language.Where(c => c.Order_id == 1).Select(c => c.Value).FirstOrDefault())</th>@*Online shop*@                                      
                                        <th class="text-center width20per">@PayDetails.Select(c => c.Currency).FirstOrDefault()</th>
                                        <th class="text-center width10per">@Html.Raw(Language.Where(c => c.Order_id == 3).Select(c => c.Value).FirstOrDefault())@*Add*@</th>        
                                        <th class="text-center width20per">@Html.Raw(Language.Where(c => c.Order_id == 5).Select(c => c.Value).FirstOrDefault())@*Amount*@</th>
                                        <th class="text-center width20per">@Html.Raw(Language.Where(c => c.Order_id == 4).Select(c => c.Value).FirstOrDefault())@*Discount*@</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="Pay-Body-Plan">
                                    @foreach (var PayDet in PayDetails.Select(c => c.PaymentDetail_Id).Distinct().ToList())
                                    {
                                        var PayDetail = PayDetails.Where(c => c.PaymentDetail_Id == PayDet).FirstOrDefault();
                                        <tr class="@PayDetail.PaymentDetail_Id">
                                            <td>@PayDetail.PaymentCatgName</td>
                                            <td><input type="text" class="form-control  input-price" @(PayDetail.Amount == 0 ? "" : "disabled") min="0" maxlength="6" id="Amount_@PayDetail.PaymentDetail_Id" value="@PayDetail.Amount" placeholder="Amount"></td>
                                            <td class="checkbox"><input type="checkbox" id="@PayDetail.PaymentDetail_Id" name="@PayDetail.PaymentDetail_Id" status="" class="add-checkbox"><label for="@PayDetail.PaymentDetail_Id"></label></td>                                         
                                            <td id="FinalAmount_@PayDetail.PaymentDetail_Id" class="text-center"></td>                                            
                                            <td class="text-center"></td>
                                        </tr>
                                    }
                                    <tr>
                                        <td colspan="3" class="text-robotobold color-darkblack font20 border-top-black">@Html.Raw(Language.Where(c => c.Order_id == 6).Select(c => c.Value).FirstOrDefault())@*Total value*@</td>
                                        <td class="text-robotobold color-darkblack font20 border-top-black text-center" id="TotalPrice">
                                            <span>0 @PayDetails.Select(c => c.Currency).FirstOrDefault()</span>
                                        </td>
                                        <td class="text-robotobold color-darkblack font20 border-top-black text-center" id="TotalCredit">
                                            <span>0 @PayDetails.Select(c => c.Currency).FirstOrDefault()</span>
                                        </td>
                                        <td class="border-top-black"><input type="button" disabled="disabled" class="buy-btn" value="@Html.Raw(Language.Where(c => c.Order_id == 7).Select(c => c.Value).FirstOrDefault())" id="Buy" onclick="BuyNewSupplier();"></td>@*Buy*@
                                    </tr>
                                </tbody>
                            </table>

                        </div>
                    }
                    else
                    {
                        <h1>@Html.Raw(Language.Where(c => c.Order_id == 8).Select(c => c.Value).FirstOrDefault())@*Payment Option is Coming Soon*@</h1>
                    }
                </form>
            </div>
        </div>
    </div>
</body>


<script>
    $('#Login').addClass('login-detail active');
    $('#Registration').addClass('login-detail active');
    $('#TermCondition').addClass('login-detail active');
    $('#PaymentGateway').addClass('login-detail');
    $('#PaymentGateway a').addClass('active');
    $("#Pay-Body-Plan tr input[type='checkbox']").click(function () {
        var CurrentEvent = $(this);
        var CurrentCatgId = $(this).prop("id");
        var ShopId = $("#ShopId").val();
        var getallChk = $("#Pay-Body-Plan tr input[type='checkbox']:checked").map(function () { return this.id; }).get().toString();
        if (getallChk == "") {
            getallChk = "0";
            $("#Buy").attr("disabled", "disabled");
        }
        else
            $("#Buy").removeAttr("disabled");
        var JsonArray = [];
        var JsonStringOld = $("#PayDetail").val();
        var EnteredAmount = $("#Amount_" + CurrentCatgId).val();
        //Logic
        if ($.isNumeric($("#Amount_" + CurrentCatgId).val())) {
            {
                if (JsonStringOld != "")
                    JsonArray = jQuery.parseJSON(JsonStringOld);
                if (!CurrentEvent.is(":checked")) {
                    getallChk = getallChk.replace(',' + CurrentCatgId, '').replace(CurrentCatgId, '');
                    JsonArray = $.grep(JsonArray, function (item, index) { return item.CatgId != CurrentCatgId });
                }
                var AmountU = 0;
                var CreditU = 0;
                $.grep(JsonArray, function (item, index) { if (item.Amount != "" && item.User != null) { AmountU += parseInt(item.Amount); } if (item.credit != "" && item.User != null) { CreditU += parseInt(item.credit); } });
                var JsonData = { CatgId: CurrentCatgId, Amount: null, shopid: ShopId, User: null, ListofCatgId: getallChk, TotalAmount: 0, credit: 0, TotalCredit: 0, AmountUser: AmountU, CatPayment: null, CreditUser: CreditU };
                if (!$("#Amount_" + CurrentCatgId).is(":disabled"))
                    JsonData.Amount = EnteredAmount;
                $.ajax({
                    url: "/Registration/ClickgoCheckPayment",
                    type: 'POST',
                    dataType: "json",
                    data: { debit: JsonData },
                    async: true,
                    success: function (Result) {
                        JsonData = Result;
                        $("#TotalPrice span").html(JsonData.TotalAmount);
                        $("#TotalCredit span").html(JsonData.TotalCredit);
                        if (CurrentEvent.is(":checked"))
                            CurrentEvent.parent("td").next("td").html(JsonData.Amount).next("td").html(JsonData.credit);
                        else
                            CurrentEvent.parent("td").next("td").html("").next("td").html("");
                        if (JsonData.User == "1")
                            JsonArray.push(JsonData);
                        $("#PayDetail").val(JSON.stringify(JsonArray));
                    },
                    cache: false,
                });
            }
        }
        else {
            $("#Amount_" + CurrentCatgId).css("border-color", "#ff0000").delay(2000).queue(function () { $("#Amount_" + CurrentCatgId).removeAttr("style").clearQueue() });
            $("#" + CurrentCatgId).prop("checked", false);
        }
    });

    function BuyNewSupplier() {
        var getallChk = $("#Pay-Body-Plan tr input[type='checkbox']:checked").map(function () { return this.id; }).get();
        if (getallChk.length > 0) {
            $(".loader").show();
            $.ajax({
                url: $("#PaymentForm").attr("action"),
                type: 'POST',
                data: { getall: getallChk.toString() },
                async: true,
                success: function () {
                    window.location.href = "/payment/getPay";
                },
                cache: false,
            });
        }
        else {
            alert("@Language.Where(c => c.Order_id == 10).Select(c => c.Value).FirstOrDefault()");
        }
    }
    function getPayDetails(Id, getallChk) {
        $.ajax({
            url: "/Registration/PayDetails",
            type: 'POST',
            dataType: "json",
            data: { PayDetailId: Id, getallChk: getallChk },
            async: true,
            success: function (Result) {
                if (Result.status == "YES") {
                    $("#Amount_" + Id).val(Result.Amount);
                    $("#Discount_" + Id).html(Result.discount + "%");
                    $("#FinalAmount_" + Id).html(Result.Amount + " " + Result.Currency);
                }
                else { $("#FinalAmount_" + Id).html(""); }
                $("#TotalPrice span").html(Result.SumTotal + " " + Result.Currency);
            },
            cache: false,
        });
    }
</script>
@if (ViewBag.GetAllChk != null && ViewBag.GetAllChk != "")
{
    string Getcheck = ViewBag.GetAllChk;
    string Check = Getcheck.Replace(",", ",#");
    <script>
        $("#@Check").click().after(getPayDetails(0, "@Getcheck"));

    </script>
}